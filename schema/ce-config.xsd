<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="urn:x-namespace:yet:to:be:determined"
  xmlns:c="urn:x-namespace:yet:to:be:determined">

  <!-- Natural language of xml text content -->
  <xs:attribute name="language" type="xs:normalizedString"/>
  <xs:attribute name="cius-specific" type="xs:boolean"/>



  <xs:complexType name="html-rtf" mixed="true">
    <xs:group ref="c:any-html" minOccurs="0" maxOccurs="1"/>
  </xs:complexType>


  <xs:group name="any-html">
    <xs:sequence>
      <xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip"/>
    </xs:sequence>
  </xs:group>


  <xs:attributeGroup name="any-attribute">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>

  <xs:complexType name="any">
    <xs:sequence>
      <xs:any processContents="skip"/>
    </xs:sequence>
  </xs:complexType>




  <xs:element name="metadata">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:nameShort"/>
        <xs:element ref="c:nameLong"/>
        <xs:element ref="c:nameTechnical"/>
        <xs:element ref="c:version"/>
        <xs:element ref="c:status"/>
        <xs:element ref="c:date"/>
        <xs:element ref="c:publisher"/>
        <xs:element ref="c:governor"/>
        <xs:element minOccurs="0" ref="c:country"/>
        <xs:element minOccurs="0" ref="c:sector"/>
        <xs:element ref="c:email"/>
        <xs:element ref="c:abstract"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- renzo: change most to normalized string then users do not need to implement own whitespace normalization -->

  <!-- A short descriptive name based on a common semantic -->
  <xs:element name="nameShort" type="xs:normalizedString"/>
  
  <!-- A descriptive name for general reference-->
  <xs:element name="nameLong" type="xs:normalizedString"/>
  
  <!-- Technical name (identifier) as described in "7.6 Identification of core invoice usage specifications"  (This should be concat with the version equal to business term "Specification identification")-->
  <xs:element name="nameTechnical" type="xs:normalizedString"/>
  
  <!-- NEW: Version of CIUS/Extension (This should be concat with the technical name equal to business term "Specification identification")-->
  <xs:element name="version" type="xs:normalizedString"/>
  
  <!-- NEW: Date of publication of CIUS/Extension -->
  <xs:element name="date" type="xs:date"/>
  
  <!-- The party who formally publishes the specification.-->
  <xs:element name="publisher" type="xs:normalizedString"/>
  
  <!-- The party who provides the specification its authority.-->
  <xs:element name="governor" type="xs:normalizedString"/>
  
  <!--  One or more ISO country codes, which the requirements the specification supports.-->
  <xs:element name="country" type="xs:normalizedString"/>
  
  <!-- The industry sector, which requirements the specification supports.-->
  <xs:element name="sector" type="xs:normalizedString"/>
  
  <!-- Contact to publisher.-->
  <xs:element name="email" type="xs:normalizedString"/>
  
  <!-- A brief description of what the specification is intended for.-->
  <xs:element name="abstract" type="c:htmlType"/>


  <!-- According to https://www.w3.org/International/questions/qa-when-xmllang it is NOT recommended to use xml>lang for natural language content of elements -->
  <xs:complexType name="htmlType">
    <xs:complexContent>
      <xs:extension base="c:html-rtf">
        <xs:attribute ref="c:language"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="definition" type="c:htmlType"/>
  <xs:element name="description" type="c:htmlType"/>

  <xs:element name="cardinality">
    <xs:complexType>
      <xs:attribute name="maxOccurs">
        <xs:simpleType>
          <xs:union memberTypes="xs:nonNegativeInteger">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="unbounded"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="minOccurs" type="xs:nonNegativeInteger"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="usage-note" type="c:htmlType"/>


  <xs:element name="technical">
    <xs:complexType/>
  </xs:element>

  <xs:complexType name="codeListType">
    <xs:sequence>
      <!-- white listing subset of CEN codelist -->
      <xs:element name="allowed-codes" type="xs:token"/>
    </xs:sequence>

    <!-- Shamelessly adopted and adpted from UBL 2.1 -->
    <xs:attribute name="listAgencyID" type="xs:normalizedString" use="optional"/>

    <xs:attribute name="listAgencyName" type="xs:string" use="optional"/>

    <xs:attribute name="listName" type="xs:string" use="optional"/>

    <xs:attribute name="listVersionID" type="xs:normalizedString" use="optional"/>

    <xs:attribute name="name" type="xs:string" use="optional"/>

    <xs:attribute ref="c:language" use="optional"/>

    <xs:attribute name="listURI" type="xs:anyURI" use="optional"/>

    <xs:attribute name="listSchemeURI" type="xs:anyURI" use="optional"/>

  </xs:complexType>

  <xs:element name="codelist" type="c:codeListType"/>

  <xs:element name="value-domain">
    <xs:complexType>
      <xs:attribute name="length" type="xs:nonNegativeInteger"/>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="fraction-digit" type="xs:nonNegativeInteger"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="semantic-definition" type="c:htmlType"/>


  <xs:element name="other">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="c:description"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:element name="syntax-bindings">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="syntax" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:normalizedString">
                <xs:enumeration value="ubl-invoice"/>
                <xs:enumeration value="ubl-creditnote"/>
                <xs:enumeration value="cii"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="schematron">
    <xs:complexType>
      <xs:sequence>
        <xs:any namespace="http://purl.oclc.org/dsdl/schematron" processContents="lax"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:simpleType name="restrictedSemanticDataTypeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Binary"/>
      <xs:enumeration value="Date"/>
      <xs:enumeration value="Decimal"/>
      <xs:enumeration value="Amount"/>
      <xs:enumeration value="Unit price amount"/>
      <xs:enumeration value="Quantity"/>
      <xs:enumeration value="Percentage"/>
      <xs:enumeration value="Identifier"/>
      <xs:enumeration value="Document reference"/>
      <xs:enumeration value="Code"/>
      <xs:enumeration value="Text"/>
      <xs:enumeration value="Binary object"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="semanticStringTypeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="String"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="semanticDataTypeType">
    <xs:union memberTypes="c:restrictedSemanticDataTypeType c:semanticStringTypeType"/>
  </xs:simpleType>

  <xs:element name="semantic-datatype" type="c:restrictedSemanticDataTypeType"/>


  <xs:complexType name="coreElementType" abstract="true">
    <xs:sequence>
      <xs:element ref="c:definition"/>
      <xs:element ref="c:cardinality"/>
      <xs:element ref="c:syntax-bindings"/>
    </xs:sequence>

    <xs:attribute name="id" use="required" type="xs:ID"/>
    <xs:attribute name="level" use="required" type="xs:nonNegativeInteger"/>
    <xs:attribute ref="c:cius-specific" use="required"/>
  </xs:complexType>

  <xs:complexType name="businessGroupType">
    <xs:complexContent>
      <xs:extension base="c:coreElementType"/>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="businessTermType">
    <xs:complexContent>
      <xs:extension base="c:coreElementType">
        <xs:sequence>
          <xs:element ref="c:usage-note" maxOccurs="1"/>
        </xs:sequence>
        <!-- This can be enhanced to contain simpleType and rules on the ids -->
        <xs:attribute name="business-group" use="optional" type="xs:IDREF"/>
        
        <xs:attribute name="semantic-datatype" use="required" type="c:semanticDataTypeType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="core-element" type="c:coreElementType" abstract="true"/>
  <xs:element name="busines-term" type="c:businessTermType" substitutionGroup="c:core-element"/>
  <xs:element name="business-group" type="c:businessGroupType" substitutionGroup="c:core-element"/>


  <xs:complexType name="restrictionType">
    <xs:sequence>
      <xs:element ref="c:cardinality" minOccurs="0"/>
      <xs:element ref="c:codelist" minOccurs="0"/>
      <xs:element ref="c:value-domain" minOccurs="0"/>
      <xs:element ref="c:semantic-definition" minOccurs="0"/>
      <xs:element ref="c:semantic-datatype" minOccurs="0"/>

    </xs:sequence>
  </xs:complexType>

  <xs:element name="information-elements">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="c:core-element" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="rule">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:description" maxOccurs="1"/>
        <xs:element name="restrictions" type="c:restrictionType" minOccurs="0"/>
        <xs:element ref="c:schematron" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:ID"/>
      <xs:attribute name="core-elements" type="xs:IDREFS" use="optional"/>
      <xs:attribute ref="c:cius-specific" use="required"/>

    </xs:complexType>
  </xs:element>

  <xs:element name="business-rules">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:rule" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Where to define extensions? as type attribute or as on element? -->
  <xs:element name="cius">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:metadata"/>
        <!-- maybe to redundant to the abstract elem within metadata -->
        <xs:element ref="c:description"/>
        <xs:element ref="c:information-elements" minOccurs="0"/>
        <xs:element ref="c:business-rules"/>
      </xs:sequence>
      <!-- CIUS (TRUE) or Extension (FALSE)-->
      <!-- renzo: I would not use a bollean for extensibibilty eitehr enum or token -->
      <xs:attribute name="type" use="required" type="xs:boolean"/>

    </xs:complexType>
  </xs:element>

</xs:schema>
