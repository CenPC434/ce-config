<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified"
  targetNamespace="urn:x-namespace:yet:to:be:determined"
  xmlns:c="urn:x-namespace:yet:to:be:determined">

  <!-- Import xml: namespace to inlcude xml:lang attribute -->
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"
    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

  <xs:attributeGroup name="codelistNoListNameAttributeGroup">
    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="listAgencyID" type="xs:normalizedString" use="optional"/>
    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="listAgencyName" type="xs:string" use="optional"/>

    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="listVersionID" type="xs:normalizedString" use="optional"/>
    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="name" type="xs:string" use="optional"/>
    <!-- Main language of external codelist -->
    <!-- Natural language of xml text content -->
    <!-- According to
    https://www.w3.org/International/questions/qa-when-xmllang.en
    it is NOT recommended to use xml:lang for natural language content of
    external elements. Hence definition of own language attribute. -->
    <xs:attribute name="language" type="xs:normalizedString" use="optional"/>
    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="listURI" type="xs:anyURI" use="optional"/>
    <!-- Shamelessly adopted and adapted from UBL 2.1 -->
    <xs:attribute name="listSchemeURI" type="xs:anyURI" use="optional"/>
  </xs:attributeGroup>


  <xs:attributeGroup name="codelistRequiredListNameAttributeGroup">
    <xs:attributeGroup ref="c:codelistNoListNameAttributeGroup"/>
    <xs:attribute name="listName" type="xs:string" use="required"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="terms">
    <xs:attribute name="term" use="optional">
      <xs:simpleType>
        <xs:list itemType="xs:normalizedString"/>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:group name="any-html">
    <xs:sequence>
      <xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip"/>
    </xs:sequence>
  </xs:group>

  <!-- 
   | Global simpleType Definitions
   -->

  <!-- All semantic datatypes as defined by CEN except String type -->
  <!-- See EN 16931-1:2017 chapter 6.5 -->
  <xs:simpleType name="restrictedSemanticDataTypeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Binary"/>
      <xs:enumeration value="Date"/>
      <xs:enumeration value="Decimal"/>
      <xs:enumeration value="Amount"/>
      <xs:enumeration value="Unit price amount"/>
      <xs:enumeration value="Quantity"/>
      <xs:enumeration value="Percentage"/>
      <xs:enumeration value="Identifier"/>
      <xs:enumeration value="Document reference"/>
      <xs:enumeration value="Code"/>
      <xs:enumeration value="Text"/>
      <xs:enumeration value="Binary object"/>
    </xs:restriction>  
  </xs:simpleType>

  <!-- String semantic datatype as defined by CEN -->
  <!-- See EN 16931-1:2017 chapter 6.5 -->
  <xs:simpleType name="semanticStringTypeType">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="String"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- All semantic datatypes as defined by CEN -->
  <!-- See EN 16931-1:2017 chapter 6.5 -->
  <xs:simpleType name="semanticDataTypeType">
    <xs:union
      memberTypes="c:restrictedSemanticDataTypeType c:semanticStringTypeType"/>
  </xs:simpleType>

  <!-- 
   | Global complexType Definitions
   -->

  <!-- Include html content but no xml:lang attribute required. Use htmlType if
    xml:lang is requires -->
  <xs:complexType name="html-rtf" mixed="true">
    <xs:group ref="c:any-html" minOccurs="0" maxOccurs="1"/>
  </xs:complexType>


  <xs:complexType name="any">
    <xs:sequence maxOccurs="unbounded">
      <xs:any processContents="skip"/>
    </xs:sequence>
  </xs:complexType>

  <!-- According to
    https://www.w3.org/International/questions/qa-when-xmllang.en it is recommended to use xml:lang for natural language content of elements -->
  <xs:complexType name="htmlType">
    <xs:complexContent>
      <xs:extension base="c:html-rtf">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <!-- Defining reference with meatdata to a CEN codelist -->
  <xs:complexType name="codeListType">
    <xs:attributeGroup ref="c:codelistNoListNameAttributeGroup"/>
  </xs:complexType>


  <!-- Defining reference with meatdata to a CEN codelist -->
  <xs:complexType name="codeWhiteListType">
    <xs:sequence>
      <!-- white listing subset of CEN codelist codes -->
      <xs:element name="allowed-codes" type="xs:token"/>
    </xs:sequence>
    <xs:attributeGroup ref="c:codelistNoListNameAttributeGroup"/>
    <xs:attributeGroup ref="c:terms"/>
  </xs:complexType>

  <!-- Defining reference with meatdata to a CEN codelist -->
  <xs:complexType name="codeListRistrictionType">
    <xs:attributeGroup ref="c:codelistRequiredListNameAttributeGroup"/>
    <xs:attribute name="removed" type="xs:boolean" fixed="true" use="required"/>
  </xs:complexType>

  <!-- Restrictions defined on terms and by rules -->
  <!-- See EN 16931-1:2017 chapter 7 -->
  <xs:complexType name="restrictionType">
    <xs:sequence>
      <xs:element ref="c:cardinality" minOccurs="0"/>
      <xs:element ref="c:codelist" minOccurs="0"/>
      <xs:element ref="c:value-domain" minOccurs="0"/>
      <xs:element ref="c:semantic-definition" minOccurs="0"/>
      <xs:element ref="c:semantic-datatype" minOccurs="0"/>
      <xs:element ref="c:other" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="synonymType">
    <xs:simpleContent>
      <xs:extension base="xs:normalizedString">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- General abstract XML type with common elements and attributes for Business Terms and Business Rules -->
  <xs:complexType name="coreElementType" abstract="true">
    <xs:sequence>
      <xs:element name="synonym" type="c:synonymType" minOccurs="0"
        maxOccurs="unbounded"/>
      <xs:element ref="c:definition" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="c:cardinality" minOccurs="0"/>
      <!-- optionally define the syntax binding of the BT or BG -->
      <xs:element ref="c:syntax-bindings" minOccurs="0"/>
    </xs:sequence>
    <!-- ID of the term or group e.g. BT-1 or BG-11 -->
    <xs:attribute name="id" use="required" type="xs:ID"/>
    <!-- The nesting level within Business Groups -->
    <xs:attribute name="level" use="optional" type="xs:nonNegativeInteger"/>
    <!-- Does it contian CIUS specific restrictions? -->
    <xs:attribute name="cius-specific" type="xs:boolean" use="required"/>
  </xs:complexType>

  <!-- The Business Group type -->
  <xs:complexType name="businessGroupType">
    <xs:complexContent>
      <xs:extension base="c:coreElementType"/>
    </xs:complexContent>
  </xs:complexType>

  <!-- The Business Term type -->
  <xs:complexType name="businessTermType">
    <xs:complexContent>
      <xs:extension base="c:coreElementType">
        <xs:sequence>
          <!-- Notes on how to use this BT -->
          <xs:element ref="c:usage-note" minOccurs="0"/>
          <xs:element name="codelist-restriction"
            type="c:codeListRistrictionType" minOccurs="0"/>
          <xs:element name="codelist-values" type="c:codeWhiteListType"
            minOccurs="0"/>
        </xs:sequence>
        <!-- This can be enhanced to contain simpleType and rules on the ids -->
        <xs:attribute name="business-group" use="optional" type="xs:IDREF"/>
        <!-- The semantic datatype of this BT -->
        <xs:attribute name="semantic-datatype" use="optional"
          type="c:semanticDataTypeType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Type of the root element cius and base for the restriction of
    extensionType -->
  <xs:complexType name="ciusType">
    <xs:sequence>
      <xs:element ref="c:metadata"/>
      <!-- maybe redundant to the abstract elem within metadata -->
      <xs:element ref="c:description"/>
      <xs:element ref="c:information-elements" minOccurs="0"/>
      <xs:element ref="c:business-rules"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Type of the root element extension a restriction of
    ciusType -->
  <xs:complexType name="extensionType">
    <xs:complexContent>
      <xs:restriction base="c:ciusType">
        <xs:sequence>
          <xs:element ref="c:metadata"/>
          <!-- maybe redundant to the abstract elem within metadata -->
          <xs:element ref="c:description"/>
          <xs:element ref="c:information-elements"/>
          <xs:element ref="c:business-rules"/>
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>


  <!-- 
   | Global Element Definitions
   -->

  <!-- renzo: change most to normalized string then users do not need to implement own whitespace normalization -->

  <!-- A short descriptive name based on a common semantic -->
  <xs:element name="nameShort" type="xs:normalizedString"/>
  <!-- A descriptive name for general reference-->
  <xs:element name="nameLong" type="xs:normalizedString"/>
  <!-- Technical name (identifier) as described in "7.6 Identification of core invoice usage specifications"  (This should be concat with the version equal to business term "Specification identification")-->
  <xs:element name="nameTechnical" type="xs:normalizedString"/>
  <!-- The specification that is used as base. A valid instance according to a CIUS specification must also be valid according to its underlying specification. If not it is an extension. -->
  <xs:element name="underlyingSpecification" type="xs:normalizedString"/>
  <!-- Version of the specification (This should be concat with the technical name equal to business term "Specification identification")-->
  <xs:element name="version" type="xs:normalizedString"/>
  <!-- The status of the specification -->
  <xs:element name="status">
    <xs:simpleType>
      <xs:restriction base="xs:normalizedString">
        <xs:enumeration value="planned"/>
        <xs:enumeration value="development"/>
        <xs:enumeration value="active"/>
        <xs:enumeration value="revoked"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <!-- Date of publication of CIUS/Extension -->
  <xs:element name="date" type="xs:date"/>
  <!-- The party who formally publishes the specification.-->
  <xs:element name="publisher" type="c:html-rtf"/>
  <!-- The party who provides the specification its authority.-->
  <xs:element name="governor" type="xs:normalizedString"/>
  <!--  One or more ISO country codes, which the requirements the specification supports.-->
  <xs:element name="country" type="xs:normalizedString"/>
  <!-- The industry sector, which requirements the specification supports.-->
  <xs:element name="sector" type="xs:normalizedString"/>
  <!-- e-Mail contact to publisher.-->
  <xs:element name="contact" type="xs:normalizedString"/>
  <!-- A brief description of what the specification is intended for.-->
  <xs:element name="abstract" type="c:htmlType"/>
  <!-- A hyperlink to more detailed information about the specification. Preferably that should include contact information. -->
  <xs:element name="furtherInformation" type="xs:anyURI"/>

  <!-- Metadata section describing with general infomation about the CIUS  -->
  <xs:element name="metadata">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:nameShort"/>
        <xs:element ref="c:nameLong"/>
        <xs:element ref="c:nameTechnical"/>
        <xs:element ref="c:underlyingSpecification"/>
        <xs:element ref="c:version"/>
        <xs:element ref="c:status"/>
        <xs:element ref="c:date"/>
        <xs:element ref="c:publisher"/>
        <xs:element ref="c:governor"/>
        <xs:element ref="c:country" minOccurs="0"/>
        <xs:element ref="c:sector" minOccurs="0"/>
        <xs:element ref="c:contact"/>
        <xs:element ref="c:abstract"/>
        <xs:element ref="c:furtherInformation"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:element name="definition" type="c:htmlType"/>
  <xs:element name="description" type="c:htmlType"/>
  <xs:element name="term"/>

  <!--  -->
  <xs:element name="cardinality">
    <xs:complexType>
      <!--<xs:sequence>
        <xs:element name="term" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>-->
      <xs:attributeGroup ref="c:terms"/>
      
      <xs:attribute name="maxOccurs">
        <xs:simpleType>
          <xs:union memberTypes="xs:nonNegativeInteger">
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="unbounded"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="minOccurs" type="xs:nonNegativeInteger"/>

    </xs:complexType>
  </xs:element>

  <xs:element name="usage-note" type="c:htmlType"/>


  <xs:element name="technical">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:term" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:element name="codelist" type="c:codeWhiteListType"/>

  <xs:element name="value-domain">
    <xs:complexType>
      <xs:attribute name="length" type="xs:nonNegativeInteger"/>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="fraction-digit" type="xs:nonNegativeInteger"/>
      <xs:attributeGroup ref="c:terms"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="semantic-definition">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:term"/>
      </xs:sequence>
      <xs:attributeGroup ref="c:terms"/>
    </xs:complexType>
  </xs:element>


  <xs:element name="other">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="description" maxOccurs="unbounded" type="c:any"/>
      </xs:sequence>
      <xs:attributeGroup ref="c:terms"/>
    </xs:complexType>
  </xs:element>


  <xs:element name="syntax-bindings">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="syntax" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:normalizedString">
                <xs:enumeration value="ubl-invoice"/>
                <xs:enumeration value="ubl-creditnote"/>
                <xs:enumeration value="cii"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="schematron">
    <xs:complexType>
      <xs:sequence>
        <xs:any namespace="http://purl.oclc.org/dsdl/schematron"
          processContents="lax"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="semantic-datatype" >
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="c:restrictedSemanticDataTypeType">
          <xs:attributeGroup ref="c:terms"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>



  <!-- Basis for substitution group  -->
  <xs:element name="core-element" type="c:coreElementType" abstract="true"/>

  <xs:element name="business-term" type="c:businessTermType"
    substitutionGroup="c:core-element"/>

  <xs:element name="business-group" type="c:businessGroupType"
    substitutionGroup="c:core-element"/>


  <xs:element name="information-elements">
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element ref="c:core-element" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <!-- A business rule description -->
  <xs:element name="rule">
    <xs:complexType>
      <xs:sequence>
        <!-- Natural language description of Business Rule-->
        <xs:element ref="c:description" maxOccurs="unbounded"/>
        <!-- One or many restrictions defined by this rule -->
        <xs:element name="restrictions" type="c:restrictionType" minOccurs="0"
          maxOccurs="unbounded"/>
        <!-- A schematron rule implementing the Business Rule -->
        <xs:element ref="c:schematron" minOccurs="0"/>
      </xs:sequence>

      <xs:attribute name="id" use="required" type="xs:ID"/>
      <!-- as for time being 
      <xs:attribute name="core-elements" use="optional">
        <xs:simpleType>
          <xs:list itemType="xs:normalizedString"/>
        </xs:simpleType>
      </xs:attribute>
      -->
      <!-- If it is a CIUS specific restriction -->
      <xs:attribute name="cius-specific" type="xs:boolean" use="required"/>

    </xs:complexType>
  </xs:element>

  <!-- The set of busines rules  (either all or the rules with CIUS specific restrictions) -->
  <xs:element name="business-rules">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:rule" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>



  <!-- The root element of a CIUS description -->
  <!-- See EN 16931-1:2017 chapter 7 -->
  <xs:element name="cius" type="c:ciusType"/>

  <xs:element name="extension" type="c:extensionType"> </xs:element>



</xs:schema>
